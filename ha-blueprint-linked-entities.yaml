blueprint:
  name: SYNCER
  description: >-
    [![Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.](https://my.home-assistant.io/badges/blueprint_import.svg)](https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fraw.githubusercontent.com%2Firzayev%2Firzayev-ha-blueprints%2Frefs%2Fheads%2Fmain%2Fha-blueprint-linked-entities.yaml)

    **Linked Entities v1.4** ðŸ”›

    This blueprint allows you to easily create/maintain an automation that links the state of multiple entities:
      - turn ANY linked entity ON, it will turn ON ALL linked entities.
      - turn ANY linked entity OFF, it will turn OFF ALL linked entities.
      - set the brightness of any light entity, it will set the same brightness of ALL linked light entities.
      - set the color temp of any light entity, it will set the same color temperature of ALL linked light entities.
      - set the color (hs_color) of any light entity, it will set the same color of ALL linked light entities.
      - set the speed (percentage) of any fan entity, it will set the speed of ALL linked fan entities.

    **NOTE**: You can select any entity with an ON/OFF state (switches, lights, etc.), lights with brightness, color temperature, or color attributes, and Fans with speed (percentage) attributes.

    **CHANGELOG:**
      - 1.4: (2025-08-27)
        - Added support for linked light colors (hs_color)
      - 1.3: (2024-07-10 - thanks @jsenecal for PR #2)
        - Ignore changes to entities triggered by this automation
        - Do not change the state of the entity triggering the automation
      - 1.2: (2024-01-28 - thanks @phrak / @TimU for PR #1)
        - Changed the action to a "Choose" building block to support fan, light and future attributes
        - Added support for linked fan speeds
        - Added support for linked light brightness and light color temperature
      - 1.1: (2024-01-09)
        - Optimized service call leveraging trigger.id
        - Introduced max_exceeded to avoid warnings in log due to possible self-triggering
        - Introduced a small delay after the service call to throttle the automation
      - 1.0: (2023-12-29)
        - First official release

  domain: automation
  input:
    linked_entity:
      name: Linked Entities
      description: Entities whose state and attributes will be linked (if any of them transitions to ON state, all will be ON. Same for the OFF, BRIGHTNESS, COLOR_TEMP, COLOR, and SPEED states).
      selector:
        entity:
          multiple: true
    delay_miliseconds:
      name: Delay
      description: How long to delay changes to linked entities
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: miliseconds
          mode: box
      default: 200

mode: single
max_exceeded: silent

variables:
  linked_entities: !input linked_entity

trigger:
  - platform: state
    id: turn_on
    entity_id: !input linked_entity
    from: "off"
    to: "on"
  - platform: state
    id: turn_off
    entity_id: !input linked_entity
    from: "on"
    to: "off"
  - platform: state
    id: set_speed
    entity_id: !input linked_entity
    attribute: percentage
  - platform: state
    id: set_brightness
    entity_id: !input linked_entity
    attribute: brightness
  - platform: state
    id: set_color_temp
    entity_id: !input linked_entity
    attribute: color_temp
  - platform: state
    id: set_color
    entity_id: !input linked_entity
    attribute: hs_color

condition:
  - condition: template
    value_template: "{{ trigger.to_state.context.id != this.context.id }}"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: turn_on
        sequence:
          - service: "homeassistant.turn_on"
            target:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
          - delay:
              milliseconds: !input delay_miliseconds

      - conditions:
          - condition: trigger
            id: turn_off
        sequence:
          - service: "homeassistant.turn_off"
            target:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
          - delay:
              milliseconds: !input delay_miliseconds

      - conditions:
          - condition: trigger
            id: set_speed
        sequence:
          - variables:
              set_fan_speed: "{{ trigger.to_state.attributes.percentage }}"
          - service: fan.set_percentage
            data:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
              percentage: "{{ set_fan_speed }}"
          - delay:
              milliseconds: !input delay_miliseconds

      - conditions:
          - condition: trigger
            id: set_brightness
        sequence:
          - variables:
              set_light_brightness: "{{ trigger.to_state.attributes.brightness }}"
          - service: light.turn_on
            data:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
              brightness: "{{ set_light_brightness }}"
          - delay:
              milliseconds: !input delay_miliseconds

      - conditions:
          - condition: trigger
            id: set_color_temp
        sequence:
          - variables:
              set_light_color_temp: "{{ trigger.to_state.attributes.color_temp }}"
          - service: light.turn_on
            data:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
              color_temp: "{{ set_light_color_temp }}"
          - delay:
              milliseconds: !input delay_miliseconds

      - conditions:
          - condition: trigger
            id: set_color
        sequence:
          - variables:
              set_light_color: "{{ trigger.to_state.attributes.hs_color }}"
          - service: light.turn_on
            data:
              entity_id: "{{linked_entities | reject('eq', trigger.entity_id) | list }}"
              hs_color: "{{ set_light_color }}"
          - delay:
              milliseconds: !input delay_miliseconds
